% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interactive.R
\name{pathEdit}
\alias{pathEdit}
\title{Adjust a path}
\usage{
pathEdit(path, twilights, offset = 0, fixed = FALSE, aspect = 1,
  extend = 3, auto.advance = FALSE, plotMap = NULL, plot.overlay = NULL,
  is.invalid = function(path) logical(nrow(path)), point.cex = 0.5,
  width = 12, height = 4, map.width = 8, map.height = 8,
  palette = defaultPalette[c(5, 2, 1, 12, 12, 1)], ...)
}
\arguments{
\item{path}{a two column matrix of the (lon,lat) locations at the
twilight times.}

\item{twilights}{dataframe of twilight times as generated by
\code{\link{findTwilights}}.}

\item{offset}{the starting hour for the vertical axes.}

\item{fixed}{logical vector indicating which locations to hold
fixed.}

\item{aspect}{aspect ratio of the map.}

\item{extend}{the number of locations before and after the current
location to highlight.}

\item{auto.advance}{advance to next point after edit.}

\item{plotMap}{A function to plot the background map.}

\item{plot.overlay}{A function to overlay twilight specific data on the map.}

\item{is.invalid}{A function that indicates if a location is not valid.}

\item{point.cex}{expansion factor for plot points.}

\item{width}{width of the selection window.}

\item{height}{height of the selection window.}

\item{map.width}{width of the map window.}

\item{map.height}{height of the map window.}

\item{palette}{a colour palette of 6 colours.}

\item{...}{additional arguments passed to plot.overlay}
}
\value{
a two column matrix of (lon,lat) locations.
}
\description{
Interactively edit a path of twilight locations.
}
\details{
Interactively edit a path of twilight locations.  A plot of the
estimated sunrise and sunset times is displayed, and the user can
select the location corresponding to a particular twilight with a
left mouse click.

The path is dislayed in another window, with the editable location
highlighted.  The user can select the point to edit with a left
mouse click, or move the editable location with a right mouse
click.  In auto advance mode, when a location is edited, the
editable location advances to the next location in the sequence.

In either window
\tabular{ll}{
'q' \tab Quits, returning the dataframe of edited twilight segments \cr
'a' \tab Toggle auto advance mode \cr
'r' \tab Resets the zoom to the encompass the entire track \cr
'c' \tab Centres the zoomed window on the current point \cr
'z' \tab Zooms to the locations surrounding the current location \cr
'u' \tab Resets any edits to the current point \cr
'+'/'-' \tab Zoom in or out \cr
'Left arrow' \tab Jump to previous location \cr
'Right arrow' \tab Jump to next location \cr
'0'-'9' \tab Set the mode of the overlay plot \cr
}

The user may supply a function \code{plotMap} that plots a
background map.  This must be a function of two arguments
\code{xlim} and \code{ylim} the determine the extent of the plot.

The user may also supply a function \code{plot.overlay} that
overlays twilight specific data on the map.  This must be a
function of six arguments, \code{mode} is an integer flag used to
indicate the style of the overlay plot, \code{twilights} is the
dataframe of twilight data, \code{index} is the index of the
current twilight, \code{xlim} and \code{ylim} determine the extent
of the plot, and \code{...} is used to pass any additional
arguments.  The mode of the overlay plot is set with the keys 0 to
9. We adopt the convention that mode 0 suppresses the overlay, but
this is not enforced.

The user may also supply a function \code{is.invalid} that accepts
the current path as an argument and returns a logical vector
indicating which locations along the path are in some way invalid.
The twilights for these locations will be highlighted.
}
